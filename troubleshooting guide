#1************Git Push Issue 
root@ip-172-31-86-13:/git-setup# git push origin master
error: src refspec master does not match any
error: failed to push some refs to 'github.com:nehasharma1795/Todo-Terraform-HA-EKS.git'
root@ip-172-31-86-13:/git-setup# git config pull.rebase false
root@ip-172-31-86-13:/git-setup# git config pull.rebase true
root@ip-172-31-86-13:/git-setup# git pull origin main --allow-unrelated-histories
Warning: Permanently added 'github.com' (ED25519) to the list of known hosts.
From github.com:nehasharma1795/Todo-Terraform-HA-EKS
 * branch            main       -> FETCH_HEAD
warning: unable to rmdir 'automating-CICD': Directory not empty
dropping 44039aee4eb1c50021a5847fc3258be8d0cc021a Initial commit -- patch contents already upstream
Successfully rebased and updated refs/heads/main.
root@ip-172-31-86-13:/git-setup# git add .
root@ip-172-31-86-13:/git-setup# git commit -m "Resolved merge conflicts"
On branch main
nothing to commit, working tree clean
root@ip-172-31-86-13:/git-setup# git push origin main
Warning: Permanently added 'github.com' (ED25519) to the list of known hosts.
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (2/2), 264 bytes | 264.00 KiB/s, done.
Total 2 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To github.com:nehasharma1795/Todo-Terraform-HA-EKS.git
   42c73ce..9634d21  main -> main
root@ip-172-31-86-13:/git-setup# git branch
* main
root@ip-172-31-86-13:/git-setup# 




#2*******************
git branch
git fetch
git branch -r
git checkout main
git push origin main

#3*******************

CISCO+nehasha6@DESKTOP-9G9O537 MINGW64 ~
$ kubectl get all -n argocd
Unable to connect to the server: dial tcp: lookup C3269218DB9C63013013EB0689907448.gr7.us-east-1.eks.amazonaws.com: no such host
Unable to connect to the server: dial tcp: lookup C3269218DB9C63013013EB0689907448.gr7.us-east-1.eks.amazonaws.com: no such host
Unable to connect to the server: dial tcp: lookup C3269218DB9C63013013EB0689907448.gr7.us-east-1.eks.amazonaws.com: no such host
Unable to connect to the server: dial tcp: lookup C3269218DB9C63013013EB0689907448.gr7.us-east-1.eks.amazonaws.com: no such host
Unable to connect to the server: dial tcp: lookup C3269218DB9C63013013EB0689907448.gr7.us-east-1.eks.amazonaws.com: no such host
Unable to connect to the server: dial tcp: lookup C3269218DB9C63013013EB0689907448.gr7.us-east-1.eks.amazonaws.com: no such host
Unable to connect to the server: dial tcp: lookup C3269218DB9C63013013EB0689907448.gr7.us-east-1.eks.amazonaws.com: no such host
Unable to connect to the server: dial tcp: lookup C3269218DB9C63013013EB0689907448.gr7.us-east-1.eks.amazonaws.com: no such host
Unable to connect to the server: dial tcp: lookup C3269218DB9C63013013EB0689907448.gr7.us-east-1.eks.amazonaws.com: no such host
Unable to connect to the server: dial tcp: lookup C3269218DB9C63013013EB0689907448.gr7.us-east-1.eks.amazonaws.com: no such host

CISCO+nehasha6@DESKTOP-9G9O537 MINGW64 ~
$ kubectl get ns
Unable to connect to the server: dial tcp: lookup C3269218DB9C63013013EB0689907448.gr7.us-east-1.eks.amazonaws.com: no such host

CISCO+nehasha6@DESKTOP-9G9O537 MINGW64 ~
$ aws configure
AWS Access Key ID [****************7SM3]:
AWS Secret Access Key [****************x2Jv]:
Default region name [us-east-1]:
Default output format [None]:

CISCO+nehasha6@DESKTOP-9G9O537 MINGW64 ~
$ kubectl get ns
Unable to connect to the server: dial tcp: lookup C3269218DB9C63013013EB0689907448.gr7.us-east-1.eks.amazonaws.com: no such host

CISCO+nehasha6@DESKTOP-9G9O537 MINGW64 ~
$ aws eks update-kubeconfig --name my-eks-cluster --region us-east-1
Updated context arn:aws:eks:us-east-1:239044943724:cluster/my-eks-cluster in C:\Users\nehasha6\.kube\config

CISCO+nehasha6@DESKTOP-9G9O537 MINGW64 ~
$ kubectl get ns
NAME              STATUS   AGE
argocd            Active   4m1s
default           Active   8m59s
kube-node-lease   Active   8m59s
kube-public       Active   8m59s
kube-system       Active   9m

CISCO+nehasha6@DESKTOP-9G9O537 MINGW64 ~
 kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath='{.data.password}' | base64 --decode; echo


#4****
Final recommended .gitignore for you:
Create a .gitignore in your project root (if not there), and add:

# Ignore Terraform system files
.terraform/
*.tfstate
*.tfstate.backup
crash.log
*.log

# Ignore Terraform provider binaries
*.exe
*.zip
*.tar.gz
âš¡ Simple steps to fix your problem:

git rm -r --cached Buddy-wise-infra/.terraform/
echo ".terraform/" >> .gitignore
git add .gitignore
git commit -m "Ignore .terraform folder and provider binaries"
git push origin main


5#******kubectl*****************

CISCO+nehasha6@DESKTOP-9G9O537 MINGW64 ~
$ kubectl version --client
Client Version: v1.30.1
Kustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3

CISCO+nehasha6@DESKTOP-9G9O537 MINGW64 ~
$ aws configure
bash: aws: command not found

CISCO+nehasha6@DESKTOP-9G9O537 MINGW64 ~
$ PATH=$PATH:/c/Program\ Files/Amazon/AWSCLIV2

CISCO+nehasha6@DESKTOP-9G9O537 MINGW64 ~
$ aws configure
AWS Access Key ID [****************7SM3]: AKIATPKBQL5WPY5L7SM3
AWS Secret Access Key [****************x2Jv]:
Default region name [us-east-1]:
Default output format [None]:

CISCO+nehasha6@DESKTOP-9G9O537 MINGW64 ~
$ aws configure
AWS Access Key ID [****************7SM3]:


CISCO+nehasha6@DESKTOP-9G9O537 MINGW64 ~
$ kubectl get nodes
NAME                         STATUS   ROLES    AGE     VERSION

#######more issue to getting oidc provider

export AWS_PAGER=""
aws eks describe-cluster --name my-eks-cluster --region ap-south-1 --query "cluster.identity.oidc.issuer" --output text


